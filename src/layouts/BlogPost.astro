---
import type { CollectionEntry } from 'astro:content';
import BaseHead from '../components/BaseHead.astro';
import Header from '../components/Header.astro';
import Footer from '../components/Footer.astro';
import FormattedDate from '../components/FormattedDate.astro';
import { getCollection } from 'astro:content';
import '../styles/BlogPost.css';

type Props = CollectionEntry<'blog'>['data'];

const { title, description, pubDate, updatedDate, author, tags } = Astro.props;

const posts = (await getCollection('blog')).sort(
	(a, b) => a.data.pubDate.valueOf() - b.data.pubDate.valueOf()
);
---

<html lang="en">
	<head>
		<BaseHead title={title} description={description} />
	</head>

	<body>
		<Header />
		<nav class="post-content">
			<h2>Table of Content</h2>
		</nav>

		<main>
			<article>
				<div class="title">
					<h1>{title}</h1>
					<div class="post-metadata">
						<div class="author">{author}</div>
						<div class="divider">|</div>
						<div class="date">
							<FormattedDate date={pubDate} />
							{
								updatedDate && (
									<div class="last-updated-on">
										Last updated on <FormattedDate date={updatedDate} />
									</div>
								)
							}
						</div>						
					</div>												
					<hr />
					<div class="tags">
						{
							tags.map((tag) => (
								<span class="tag">{tag}</span>
							))
						}
					</div>
					<hr />
				</div>
				<div class="prose">					
					<slot />
				</div>
			</article>
		</main>
				
		<aside class="other-posts">
			<h3>See Also</h2>
			<div class="other-posts-wrapper">
				{
					posts.slice(0,2).map((post) => (
						<div class="post">
							<a href={`/Blog/blog/${post.slug}/`}>
								<img src={post.data.heroImage} alt="" />
								<h4 class="title">{post.data.title}</h4>
								<p class="date">
									<FormattedDate date={post.data.pubDate} />
								</p>
							</a>
						</div>
					))
				}
			</div>
		</aside>
		<Footer />
	</body>
</html>
