---
import '../styles/global.css';
import type { CollectionEntry } from 'astro:content';
import BaseHead from '../components/BaseHead.astro';
import Header from '../components/Header.astro';
import Footer from '../components/Footer.astro';
import FormattedDate from '../components/FormattedDate.astro';
import { getCollection } from 'astro:content';

type Props = CollectionEntry<'blog'>['data'];

const { title, description, pubDate, updatedDate, heroImage, author, tag1, tag2, tag3 } = Astro.props;

const posts = (await getCollection('blog')).sort(
	(a, b) => a.data.pubDate.valueOf() - b.data.pubDate.valueOf()
);
---

<html lang="en">
	<head>
		<BaseHead title={title} description={description} />
		<style>
			main {
				max-width: 100%;
				width: calc(100% - 2em);
				margin: 0;
			}
			.hero-image {
				width: 100%;
			}
			.hero-image img {
				display: block;
				margin: 0 auto;
				/* border-radius: 12px; */
				box-shadow: var(--box-shadow);
			}
			article{
				width: 1020px;
				max-width: calc(100% - 2em);
				margin: 0 auto;
			}
			.prose {
				width: 100%;
				padding: 1em 0;
				/* color: rgb(var(--gray-dark)); */
			}
			.author{
				display: block;
			}			
			.title {
				/* margin-bottom: 1em; */
				/* padding: 1em 0; */
				text-align: left;
				line-height: 1;
			}
			.title h1 {
				margin-bottom: 0.5em;
			}
			.date {
				margin: 0.5em 0 0.7em 0;
				color: var(--gray-0);
			}
			.last-updated-on {
				font-style: italic;
			}
			.tag {
				display: inline-block;
				color: var(--tags);
				margin: 0.3em 1em 0.3em 0;
			}
			.other-posts{
				display: flex;
				
				max-width: 100%;
				width: calc(100% - 2em);
				margin: 0;
				
				flex-wrap: wrap;
			}
			.post{
				max-width: 30%;
			}
		</style>
	</head>

	<body>
		<Header />
		<main>
			<article>
				<!-- <div class="hero-image">
					{heroImage && <img width={1020} height={510} src={heroImage} alt="" />}
				</div> -->
				<div class="title">
					<h1>{title}</h1>
					<div class="post-metadata">
						<span class="author">{author}</span>
						<div class="date">
							<FormattedDate date={pubDate} />
							{
								updatedDate && (
									<div class="last-updated-on">
										Last updated on <FormattedDate date={updatedDate} />
									</div>
								)
							}
						</div>
						
					</div>												
					<hr />
					<div class="tags">
						<span class="tag">{tag1}</span>
						<span class="tag">{tag2}</span>
						<span class="tag">{tag3}</span>
					</div>
					<hr />
				</div>
				<div class="prose">
					
					<slot />
				</div>
			</article>
		</main>
		<hr />
		<h3>See Also</h2>
		<section class="other-posts">
			{
				posts.map((post) => (
					<div class="post">
						<a href={`/Blog/blog/${post.slug}/`}>
							<img src={post.data.heroImage} alt="" />
							<h4 class="title">{post.data.title}</h4>
							<p class="date">
								<FormattedDate date={post.data.pubDate} />
							</p>
						</a>
					</div>
				))
			}
		</section>
		<Footer />
	</body>
</html>
